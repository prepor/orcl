{:rename-macros {}, :renames {}, :externs {Error {}, goog {string {StringBuffer {prototype {append {}}}}}, eval {}}, :use-macros {join clojure.string}, :excludes #{cat}, :name blancas.kern.core, :imports nil, :requires {blancas.kern.i18n blancas.kern.i18n, char blancas.kern.char, blancas.kern.char blancas.kern.char, str clojure.string, clojure.string clojure.string, cljs.pprint cljs.pprint, clojure.pprint cljs.pprint}, :cljs.spec/speced-vars [], :uses {pprint cljs.pprint, i18n blancas.kern.i18n, join clojure.string, fmt blancas.kern.i18n, di18n blancas.kern.i18n}, :defs {end-by1 {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 539, :column 7, :end-line 539, :end-column 14, :arglists (quote ([sep p])), :doc "Parses p one or more times, separated and ended by applications\n   of sep; returns the results of p in a vector."}, :name blancas.kern.core/end-by1, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 14, :method-params ([sep p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 539, :end-line 539, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sep p])), :doc "Parses p one or more times, separated and ended by applications\n   of sep; returns the results of p in a vector."}, get-msg {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 173, :column 7, :end-line 173, :end-column 14, :arglists (quote ([pmsg])), :doc "Get the text from message types system, unexpect, and message."}, :name blancas.kern.core/get-msg, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 14, :method-params ([pmsg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 173, :end-line 173, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pmsg])), :doc "Get the text from message types system, unexpect, and message."}, clear-empty {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 284, :column 7, :end-line 284, :end-column 18, :arglists (quote ([s])), :doc "Sets the parser state as not empty. Needed in compound parsers\n   where optional parsers at the end may leave an incorrect :empty\n   state for the parser as a whole."}, :name blancas.kern.core/clear-empty, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Sets the parser state as not empty. Needed in compound parsers\n   where optional parsers at the end may leave an incorrect :empty\n   state for the parser as a whole."}, skip-many {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 503, :column 7, :end-line 503, :end-column 16, :arglists (quote ([p])), :doc "Parses p zero or more times and skips the results. This is\n   like skip but it can apply p zero, one, or many times."}, :name blancas.kern.core/skip-many, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 16, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 503, :end-line 503, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Parses p zero or more times and skips the results. This is\n   like skip but it can apply p zero, one, or many times."}, *tab-width* {:meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 84, :column 16, :end-line 84, :end-column 27, :dynamic true}, :name blancas.kern.core/*tab-width*, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 27, :column 1, :dynamic true, :line 84, :end-line 84, :tag number, :doc "The number of columns to advance for a tab character.\n   By default, a tab takes four columns."}, end-by {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 533, :column 7, :end-line 533, :end-column 13, :arglists (quote ([sep p])), :doc "Parses p zero or more times, separated and ended by applications\n   of sep; returns the results of p in a vector."}, :name blancas.kern.core/end-by, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :method-params ([sep p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 533, :end-line 533, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sep p])), :doc "Parses p zero or more times, separated and ended by applications\n   of sep; returns the results of p in a vector."}, get-msg-str {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 210, :column 7, :end-line 210, :end-column 18, :arglists (quote ([err])), :doc "Gets the text of error messages separated by \\n."}, :name blancas.kern.core/get-msg-str, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :method-params ([err]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 1, :fn-var true, :arglists (quote ([err])), :doc "Gets the text of error messages separated by \\n."}, tab {:name blancas.kern.core/tab, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 668, :column 1, :end-line 668, :end-column 9, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 668, :column 6, :end-line 668, :end-column 9}, :doc "Parses the tab character.", :tag any}, eof {:name blancas.kern.core/eof, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 799, :column 1, :end-line 799, :end-column 9, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 799, :column 6, :end-line 799, :end-column 9}, :doc "Succeeds on end of input.", :tag any}, hex-digit {:name blancas.kern.core/hex-digit, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 680, :column 1, :end-line 680, :end-column 15, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 680, :column 6, :end-line 680, :end-column 15}, :doc "Parses a hexadecimal digit.", :tag any}, field* {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 809, :column 7, :end-line 809, :end-column 13, :arglists (quote ([cs])), :doc "Parses an unquoted text field terminated by any character in cs."}, :name blancas.kern.core/field*, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :method-params ([cs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 809, :end-line 809, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cs])), :doc "Parses an unquoted text field terminated by any character in cs."}, many {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 448, :column 7, :end-line 448, :end-column 11, :arglists (quote ([p])), :doc "Parses p zero or more times; returns the result(s) in a\n   vector. It stops when p fails, but this parser succeeds."}, :name blancas.kern.core/many, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 11, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 448, :end-line 448, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Parses p zero or more times; returns the result(s) in a\n   vector. It stops when p fails, but this parser succeeds."}, char-pos {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 140, :column 17, :end-line 140, :end-column 25, :dynamic true, :arglists (quote ([pos c])), :doc "Computes the new position of the character c."}, :name blancas.kern.core/char-pos, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 25, :method-params ([pos c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 140, :end-line 140, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos c])), :doc "Computes the new position of the character c."}, sym* {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 705, :column 16, :end-line 705, :end-column 20, :arglists (quote ([x])), :doc "Parses a single symbol x (a character)."}, :name blancas.kern.core/sym*, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :line 705, :end-line 705, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Parses a single symbol x (a character)."}, str-pos-x {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 1019, :column 8, :end-line 1019, :end-column 17, :private true, :arglists (quote ([x _]))}, :private true, :name blancas.kern.core/str-pos-x, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 17, :method-params ([x _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1019, :end-line 1019, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x _]))}, <*> {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 427, :column 7, :end-line 427, :end-column 10, :arglists (quote ([p & more])), :doc "Applies one or more parsers; collects the results in a\n   vector, including nil values. If any parser fails, it\n   stops immediately and fails.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(p more)], :arglists ([p & more]), :arglists-meta (nil)}}, :name blancas.kern.core/<*>, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(p more)], :arglists ([p & more]), :arglists-meta (nil)}, :method-params [(p more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 427, :end-line 427, :max-fixed-arity 1, :fn-var true, :arglists ([p & more]), :doc "Applies one or more parsers; collects the results in a\n   vector, including nil values. If any parser fails, it\n   stops immediately and fails."}, modify-state {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 898, :column 7, :end-line 898, :end-column 19, :arglists (quote ([f & more])), :doc "Modify the user state with the result of f, which takes the old\n   user state plus any additional arguments.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f more)], :arglists ([f & more]), :arglists-meta (nil)}}, :name blancas.kern.core/modify-state, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(f more)], :arglists ([f & more]), :arglists-meta (nil)}, :method-params [(f more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 898, :end-line 898, :max-fixed-arity 1, :fn-var true, :arglists ([f & more]), :doc "Modify the user state with the result of f, which takes the old\n   user state plus any additional arguments."}, digit {:name blancas.kern.core/digit, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 674, :column 1, :end-line 674, :end-column 11, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 674, :column 6, :end-line 674, :end-column 11}, :doc "Parses a digit.", :tag any}, get-input {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 907, :column 7, :end-line 907, :end-column 16, :arglists (quote ([s])), :doc "Gets the input stream from a parser state."}, :name blancas.kern.core/get-input, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 907, :end-line 907, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Gets the input stream from a parser state."}, word- {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 773, :column 7, :end-line 773, :end-column 12, :arglists (quote ([letter cs] [letter cs & more])), :doc "Parses a specific string, delimited by letter; not case-sensitive.\n   If more than one are given it will try each choice in turn.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([letter cs]), :arglists ([letter cs] [letter cs & more]), :arglists-meta (nil nil)}}, :name blancas.kern.core/word-, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([letter cs]), :arglists ([letter cs] [letter cs & more]), :arglists-meta (nil nil)}, :method-params ([letter cs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 773, :end-line 773, :max-fixed-arity 2, :fn-var true, :arglists ([letter cs] [letter cs & more]), :doc "Parses a specific string, delimited by letter; not case-sensitive.\n   If more than one are given it will try each choice in turn."}, get-msg-expect {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 183, :column 7, :end-line 183, :end-column 21, :arglists (quote ([lst])), :doc "Get the text from a list of messages of type expect."}, :name blancas.kern.core/get-msg-expect, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 21, :method-params ([lst]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 183, :end-line 183, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lst])), :doc "Get the text from a list of messages of type expect."}, make-err-unexpect {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 158, :column 7, :end-line 158, :end-column 24, :arglists (quote ([pos text])), :doc "Makes a message of type err-unexpect."}, :name blancas.kern.core/make-err-unexpect, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 24, :method-params ([pos text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 158, :end-line 158, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos text])), :doc "Makes a message of type err-unexpect."}, defn* {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 41, :column 11, :end-line 41, :end-column 16, :macro true, :arglists (quote ([name & more])), :doc "Same as def, yielding a dynamic def.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env name more)], :arglists ([&form &env name & more]), :arglists-meta (nil)}}, :name blancas.kern.core/defn*, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(&form &env name more)], :arglists ([&form &env name & more]), :arglists-meta (nil)}, :method-params [(&form &env name more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 41, :macro true, :end-line 41, :max-fixed-arity 3, :fn-var false, :arglists ([&form &env name & more]), :doc "Same as def, yielding a dynamic def."}, reply {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 255, :column 7, :end-line 255, :end-column 12, :arglists (quote ([v s])), :doc "Makes s succeed with value v."}, :name blancas.kern.core/reply, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 12, :method-params ([v s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v s])), :doc "Makes s succeed with value v."}, conjp {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 79, :column 8, :end-line 79, :end-column 13, :private true, :arglists (quote ([p])), :doc "Like conj but ignores values based on a predicate."}, :private true, :name blancas.kern.core/conjp, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Like conj but ignores values based on a predicate."}, parse-data {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 1024, :column 7, :end-line 1024, :end-column 17, :arglists (quote ([p cs] [p cs src] [p cs src us])), :doc "Works like (parse) but with error diagnostics disabled for\n   better performance. It's intended for data that can be\n   assumed to be correct or its diagnosis postponed.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}}, :name blancas.kern.core/parse-data, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}, :method-params ([p cs] [p cs src] [p cs src us]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 1024, :end-line 1024, :max-fixed-arity 4, :fn-var true, :arglists ([p cs] [p cs src] [p cs src us]), :doc "Works like (parse) but with error diagnostics disabled for\n   better performance. It's intended for data that can be\n   assumed to be correct or its diagnosis postponed."}, skip {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 492, :column 7, :end-line 492, :end-column 11, :arglists (quote ([p] [p q] [p q & more])), :doc "Applies one or more parsers and skips the result. That is, it\n   returns a parser state record with a :value nil.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([p] [p q]), :arglists ([p] [p q] [p q & more]), :arglists-meta (nil nil nil)}}, :name blancas.kern.core/skip, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 11, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([p] [p q]), :arglists ([p] [p q] [p q & more]), :arglists-meta (nil nil nil)}, :method-params ([p] [p q]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 492, :end-line 492, :max-fixed-arity 2, :fn-var true, :arglists ([p] [p q] [p q & more]), :doc "Applies one or more parsers and skips the result. That is, it\n   returns a parser state record with a :value nil."}, sym- {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 718, :column 16, :end-line 718, :end-column 20, :arglists (quote ([x])), :doc "Parses a single symbol x (a character); not case-sensitive."}, :name blancas.kern.core/sym-, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 10, :line 718, :end-line 718, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Parses a single symbol x (a character); not case-sensitive."}, many1 {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 467, :column 7, :end-line 467, :end-column 12, :arglists (quote ([p])), :doc "Parses p one or more times and returns the result(s) in a\n   vector. It stops when p fails, but this parser succeeds."}, :name blancas.kern.core/many1, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 12, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 467, :end-line 467, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Parses p one or more times and returns the result(s) in a\n   vector. It stops when p fails, but this parser succeeds."}, <$> {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 422, :column 7, :end-line 422, :end-column 10, :arglists (quote ([f p])), :doc "Parses p; if successful, it applies f to the value parsed by p."}, :name blancas.kern.core/<$>, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 10, :method-params ([f p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 422, :end-line 422, :max-fixed-arity 2, :fn-var true, :arglists (quote ([f p])), :doc "Parses p; if successful, it applies f to the value parsed by p."}, err-unexpect {:name blancas.kern.core/err-unexpect, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 97, :column 1, :end-line 97, :end-column 18, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 97, :column 6, :end-line 97, :end-column 18}, :tag number}, new-line* {:name blancas.kern.core/new-line*, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 793, :column 1, :end-line 793, :end-column 15, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 793, :column 6, :end-line 793, :end-column 15}, :doc "Succeeds on a new line.", :tag any}, dec-num {:name blancas.kern.core/dec-num, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 844, :column 1, :end-line 844, :end-column 13, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 844, :column 6, :end-line 844, :end-column 13}, :doc "Parses a decimal integer delimited by any character that\n   is not a decimal digit.", :tag any}, map->PMessage {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 116, :column 12, :end-line 116, :end-column 20, :internal-ctor true, :factory :map, :arglists (quote ([G__29915]))}, :name blancas.kern.core/map->PMessage, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 20, :method-params ([G__29915]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 116, :end-line 116, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29915]))}, oct-digit {:name blancas.kern.core/oct-digit, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 687, :column 1, :end-line 687, :end-column 15, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 687, :column 6, :end-line 687, :end-column 15}, :doc "Parses an octal digit.", :tag any}, cat {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 230, :column 8, :end-line 230, :end-column 11, :private true, :arglists (quote ([p s])), :doc "Applies p on s; conjoins the result to that of s."}, :private true, :name blancas.kern.core/cat, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 11, :method-params ([p s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 230, :end-line 230, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p s])), :doc "Applies p on s; conjoins the result to that of s."}, char-pos-x {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 1018, :column 8, :end-line 1018, :end-column 18, :private true, :arglists (quote ([x _]))}, :private true, :name blancas.kern.core/char-pos-x, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :method-params ([x _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1018, :end-line 1018, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x _]))}, upper {:name blancas.kern.core/upper, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 650, :column 1, :end-line 650, :end-column 11, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 650, :column 6, :end-line 650, :end-column 11}, :doc "Parses an upper-case letter.", :tag any}, get-msg-list {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 195, :column 8, :end-line 195, :end-column 20, :private true, :arglists (quote ([{msgs :msgs}])), :doc "Gets the text of error messages as a list."}, :private true, :name blancas.kern.core/get-msg-list, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 20, :method-params ([p__29956]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{msgs :msgs}])), :doc "Gets the text of error messages as a list."}, skip-ws {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 804, :column 7, :end-line 804, :end-column 14, :arglists (quote ([p])), :doc "Skips whitespaces before parsing p."}, :name blancas.kern.core/skip-ws, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 14, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 804, :end-line 804, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Skips whitespaces before parsing p."}, print-error {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 952, :column 7, :end-line 952, :end-column 18, :arglists (quote ([s])), :doc "Prints error messages in a PState record."}, :name blancas.kern.core/print-error, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 952, :end-line 952, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Prints error messages in a PState record."}, merge-err-x {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 1020, :column 8, :end-line 1020, :end-column 19, :private true, :arglists (quote ([_ _]))}, :private true, :name blancas.kern.core/merge-err-x, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 19, :method-params ([_ _]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1020, :end-line 1020, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ _]))}, run {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 964, :column 7, :end-line 964, :end-column 10, :arglists (quote ([p cs] [p cs src] [p cs src us])), :doc "For testing parsers, e.g. at the REPL. Calls (parse) on the\n   arguments and prints the result. If p succeeds it prints the\n   parsed value; if it fails it prints any error messages.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}}, :name blancas.kern.core/run, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}, :method-params ([p cs] [p cs src] [p cs src us]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 964, :end-line 964, :max-fixed-arity 4, :fn-var true, :arglists ([p cs] [p cs src] [p cs src us]), :doc "For testing parsers, e.g. at the REPL. Calls (parse) on the\n   arguments and prints the result. If p succeeds it prints the\n   parsed value; if it fails it prints any error messages."}, space {:name blancas.kern.core/space, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 662, :column 1, :end-line 662, :end-column 11, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 662, :column 6, :end-line 662, :end-column 11}, :doc "Parses the space character.", :tag any}, sep-by {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 527, :column 7, :end-line 527, :end-column 13, :arglists (quote ([sep p])), :doc "Parses p zero or more times while parsing sep in between;\n   collects the results of p in a vector."}, :name blancas.kern.core/sep-by, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :method-params ([sep p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 527, :end-line 527, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sep p])), :doc "Parses p zero or more times while parsing sep in between;\n   collects the results of p in a vector."}, sep-end-by1 {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 547, :column 7, :end-line 547, :end-column 18, :arglists (quote ([sep p])), :doc "Parses p one or more times separated, and optionally ended by sep;\n   collects the results in a vector."}, :name blancas.kern.core/sep-end-by1, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :method-params ([sep p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 547, :end-line 547, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sep p])), :doc "Parses p one or more times separated, and optionally ended by sep;\n   collects the results in a vector."}, look-ahead {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 576, :column 7, :end-line 576, :end-column 17, :arglists (quote ([p])), :doc "Applies p and returns the result; it consumes no input."}, :name blancas.kern.core/look-ahead, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 17, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 576, :end-line 576, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Applies p and returns the result; it consumes no input."}, PPosition {:num-fields 3, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IComparable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name blancas.kern.core/PPosition, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 21, :type true, :column 12, :internal-ctor true, :line 105, :record true, :end-line 105, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IComparable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, set-position {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 922, :column 7, :end-line 922, :end-column 19, :arglists (quote ([pos])), :doc "Sets the position in the input stream of a parser state."}, :name blancas.kern.core/set-position, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 19, :method-params ([pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 922, :end-line 922, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pos])), :doc "Sets the position in the input stream of a parser state."}, make-pos {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 134, :column 7, :end-line 134, :end-column 15, :arglists (quote ([src] [src ln col])), :doc "Makes a position record.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([src] [src ln col]), :arglists ([src] [src ln col]), :arglists-meta (nil nil)}}, :name blancas.kern.core/make-pos, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([src] [src ln col]), :arglists ([src] [src ln col]), :arglists-meta (nil nil)}, :method-params ([src] [src ln col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 3, :fn-var true, :arglists ([src] [src ln col]), :doc "Makes a position record."}, >>= {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 369, :column 7, :end-line 369, :end-column 10, :arglists (quote ([p f])), :doc "Binds parser p to function f which gets p's value and returns\n   a new parser. Function p must define a single parameter. The\n   argument it receives is the value parsed by p, not ps' return\n   value, which is a parser state record."}, :name blancas.kern.core/>>=, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 10, :method-params ([p f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 369, :end-line 369, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p f])), :doc "Binds parser p to function f which gets p's value and returns\n   a new parser. Function p must define a single parameter. The\n   argument it receives is the value parsed by p, not ps' return\n   value, which is a parser state record."}, white-space {:name blancas.kern.core/white-space, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 656, :column 1, :end-line 656, :end-column 17, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 656, :column 6, :end-line 656, :end-column 17}, :doc "Parses a whitespace character.", :tag any}, merge-err {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 217, :column 18, :end-line 217, :end-column 27, :dynamic true, :private true, :arglists (quote ([{e1 :error} {e2 :error}])), :doc "Merges errors from two state records."}, :private true, :name blancas.kern.core/merge-err, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 27, :method-params ([p__29959 p__29960]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 217, :end-line 217, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{e1 :error} {e2 :error}])), :doc "Merges errors from two state records."}, letter {:name blancas.kern.core/letter, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 638, :column 1, :end-line 638, :end-column 12, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 638, :column 6, :end-line 638, :end-column 12}, :doc "Parses a letter.", :tag any}, map->PPosition {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 105, :column 12, :end-line 105, :end-column 21, :internal-ctor true, :factory :map, :arglists (quote ([G__29905]))}, :name blancas.kern.core/map->PPosition, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 21, :method-params ([G__29905]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 105, :end-line 105, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29905]))}, mark {:name blancas.kern.core/mark, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 827, :column 1, :end-line 827, :end-column 10, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 827, :column 6, :end-line 827, :end-column 10}, :doc "Succeeds with a punctuation mark.", :tag any}, return {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 296, :column 7, :end-line 296, :end-column 13, :arglists (quote ([v])), :doc "Succeeds without consuming any input. Any carried errors\n   are removed."}, :name blancas.kern.core/return, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :method-params ([v]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 296, :end-line 296, :max-fixed-arity 1, :fn-var true, :arglists (quote ([v])), :doc "Succeeds without consuming any input. Any carried errors\n   are removed."}, put-state {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 893, :column 7, :end-line 893, :end-column 16, :arglists (quote ([u])), :doc "Put u as the new value for user state in the parser state record."}, :name blancas.kern.core/put-state, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 16, :method-params ([u]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 893, :end-line 893, :max-fixed-arity 1, :fn-var true, :arglists (quote ([u])), :doc "Put u as the new value for user state in the parser state record."}, expect {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 341, :column 7, :end-line 341, :end-column 13, :arglists (quote ([p msg])), :doc "Applies parser p; if it fails (regardless of input consumed)\n   it replaces any expecting errors with expecting msg. This is\n   similar to <?> but works even if some input was consumed."}, :name blancas.kern.core/expect, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :method-params ([p msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 341, :end-line 341, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p msg])), :doc "Applies parser p; if it fails (regardless of input consumed)\n   it replaces any expecting errors with expecting msg. This is\n   similar to <?> but works even if some input was consumed."}, unexpected-input {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 272, :column 7, :end-line 272, :end-column 23, :arglists (quote ([in s])), :doc "Sets s as failed because of an unexpected input."}, :name blancas.kern.core/unexpected-input, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 23, :method-params ([in s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 272, :end-line 272, :max-fixed-arity 2, :fn-var true, :arglists (quote ([in s])), :doc "Sets s as failed because of an unexpected input."}, member? {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 74, :column 7, :end-line 74, :end-column 14, :arglists (quote ([x coll])), :doc "Tests if x is a member of coll."}, :name blancas.kern.core/member?, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 14, :method-params ([x coll]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x coll])), :doc "Tests if x is a member of coll."}, not-followed-by {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 594, :column 7, :end-line 594, :end-column 22, :arglists (quote ([p])), :doc "Succeeds only if p fails; consumes no input."}, :name blancas.kern.core/not-followed-by, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 22, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 594, :end-line 594, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Succeeds only if p fails; consumes no input."}, word* {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 763, :column 7, :end-line 763, :end-column 12, :arglists (quote ([letter cs] [letter cs & more])), :doc "Parses a specific string, delimited by letter. If more than\n   one are given it will try each choice in turn.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([letter cs]), :arglists ([letter cs] [letter cs & more]), :arglists-meta (nil nil)}}, :name blancas.kern.core/word*, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([letter cs]), :arglists ([letter cs] [letter cs & more]), :arglists-meta (nil nil)}, :method-params ([letter cs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 763, :end-line 763, :max-fixed-arity 2, :fn-var true, :arglists ([letter cs] [letter cs & more]), :doc "Parses a specific string, delimited by letter. If more than\n   one are given it will try each choice in turn."}, value {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 944, :column 7, :end-line 944, :end-column 12, :arglists (quote ([p cs] [p cs src] [p cs src us])), :doc "Calls (parse) on the arguments and returns the actual parsed\n   value, not the PState record.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}}, :name blancas.kern.core/value, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}, :method-params ([p cs] [p cs src] [p cs src us]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 944, :end-line 944, :max-fixed-arity 4, :fn-var true, :arglists ([p cs] [p cs src] [p cs src us]), :doc "Calls (parse) on the arguments and returns the actual parsed\n   value, not the PState record."}, get-state {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 888, :column 7, :end-line 888, :end-column 16, :arglists (quote ([s])), :doc "Get the user state from the parser state record."}, :name blancas.kern.core/get-state, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 16, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 888, :end-line 888, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Get the user state from the parser state record."}, one-of* {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 784, :column 7, :end-line 784, :end-column 14, :arglists (quote ([cs])), :doc "Succeeds if the next character is in the supplied string."}, :name blancas.kern.core/one-of*, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 14, :method-params ([cs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 784, :end-line 784, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cs])), :doc "Succeeds if the next character is in the supplied string."}, ->PMessage {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 116, :column 12, :end-line 116, :end-column 20, :internal-ctor true, :factory :positional, :arglists (quote ([type text]))}, :name blancas.kern.core/->PMessage, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 20, :method-params ([type text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 116, :end-line 116, :max-fixed-arity 2, :fn-var true, :arglists (quote ([type text]))}, str-pos {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 148, :column 17, :end-line 148, :end-column 24, :dynamic true, :arglists (quote ([pos cs])), :doc "Computes the stream position after the character sequence cs."}, :name blancas.kern.core/str-pos, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 24, :method-params ([pos cs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 148, :end-line 148, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos cs])), :doc "Computes the stream position after the character sequence cs."}, map->PError {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 121, :column 12, :end-line 121, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__29925]))}, :name blancas.kern.core/map->PError, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :method-params ([G__29925]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29925]))}, times {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 568, :column 7, :end-line 568, :end-column 12, :arglists (quote ([n p])), :doc "Applies p n times; collects the results in a vector."}, :name blancas.kern.core/times, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 12, :method-params ([n p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 568, :end-line 568, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n p])), :doc "Applies p n times; collects the results in a vector."}, err-system {:name blancas.kern.core/err-system, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 96, :column 1, :end-line 96, :end-column 16, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 96, :column 6, :end-line 96, :end-column 16}, :tag number}, between {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 562, :column 7, :end-line 562, :end-column 14, :arglists (quote ([delim p] [open close p])), :doc "Applies open, p, close; returns the value of p.", :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([delim p] [open close p]), :arglists ([delim p] [open close p]), :arglists-meta (nil nil)}}, :name blancas.kern.core/between, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([delim p] [open close p]), :arglists ([delim p] [open close p]), :arglists-meta (nil nil)}, :method-params ([delim p] [open close p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 562, :end-line 562, :max-fixed-arity 3, :fn-var true, :arglists ([delim p] [open close p]), :doc "Applies open, p, close; returns the value of p."}, failed-empty? {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 260, :column 7, :end-line 260, :end-column 20, :arglists (quote ([s])), :doc "Tests if s failed without consuming any input."}, :name blancas.kern.core/failed-empty?, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 20, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Tests if s failed without consuming any input."}, <:> {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 440, :column 7, :end-line 440, :end-column 10, :arglists (quote ([p])), :doc "Parses p; on failure it pretends it did not consume any input."}, :name blancas.kern.core/<:>, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 10, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 440, :end-line 440, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Parses p; on failure it pretends it did not consume any input."}, token- {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 745, :column 7, :end-line 745, :end-column 13, :arglists (quote ([xs] [xs & more])), :doc "Parses a specific string, not necessarily delimited; not\n   case-sensitive. If more than one are given it will try\n   each choice in turn.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([xs]), :arglists ([xs] [xs & more]), :arglists-meta (nil nil)}}, :name blancas.kern.core/token-, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([xs]), :arglists ([xs] [xs & more]), :arglists-meta (nil nil)}, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 745, :end-line 745, :max-fixed-arity 1, :fn-var true, :arglists ([xs] [xs & more]), :doc "Parses a specific string, not necessarily delimited; not\n   case-sensitive. If more than one are given it will try\n   each choice in turn."}, >> {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 404, :column 7, :end-line 404, :end-column 9, :arglists (quote ([p q] [p q & more])), :doc "Parses p followed by q; skips p, keeps q. If more parsers are\n   given, it skips all but last and keeps the result of the last.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([p q]), :arglists ([p q] [p q & more]), :arglists-meta (nil nil)}}, :name blancas.kern.core/>>, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([p q]), :arglists ([p q] [p q & more]), :arglists-meta (nil nil)}, :method-params ([p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 404, :end-line 404, :max-fixed-arity 2, :fn-var true, :arglists ([p q] [p q & more]), :doc "Parses p followed by q; skips p, keeps q. If more parsers are\n   given, it skips all but last and keeps the result of the last."}, make-err-message {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 168, :column 7, :end-line 168, :end-column 23, :arglists (quote ([pos text])), :doc "Makes a message of type err-message."}, :name blancas.kern.core/make-err-message, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 23, :method-params ([pos text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 168, :end-line 168, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos text])), :doc "Makes a message of type err-message."}, many0 {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 461, :column 7, :end-line 461, :end-column 12, :arglists (quote ([p])), :doc "Like (many) but it won't set the state to :empty. Use instead of\n   (many) if it comes last to avoid overriding non-empty parsing."}, :name blancas.kern.core/many0, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 12, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 461, :end-line 461, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Like (many) but it won't set the state to :empty. Use instead of\n   (many) if it comes last to avoid overriding non-empty parsing."}, <?> {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 331, :column 7, :end-line 331, :end-column 10, :arglists (quote ([p msg])), :doc "If parser p fails consuming no input, it replaces any Expecting\n   errors with a single Expecting with message msg. This helps to\n   produce more abstract and accurate error messages."}, :name blancas.kern.core/<?>, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 10, :method-params ([p msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 331, :end-line 331, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p msg])), :doc "If parser p fails consuming no input, it replaces any Expecting\n   errors with a single Expecting with message msg. This helps to\n   produce more abstract and accurate error messages."}, make-err-system {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 153, :column 7, :end-line 153, :end-column 22, :arglists (quote ([pos text])), :doc "Makes a message of type err-system."}, :name blancas.kern.core/make-err-system, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 22, :method-params ([pos text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos text])), :doc "Makes a message of type err-system."}, search {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 617, :column 7, :end-line 617, :end-column 13, :arglists (quote ([p])), :doc "Applies a parser p, traversing the input as necessary,\n   until it succeeds or it reaches the end of input."}, :name blancas.kern.core/search, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 617, :end-line 617, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Applies a parser p, traversing the input as necessary,\n   until it succeeds or it reaches the end of input."}, <|> {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 351, :column 7, :end-line 351, :end-column 10, :arglists (quote ([p q] [p q & more])), :doc "Tries p; if it fails without consuming any input, it tries q.\n   With more parsers, it will stop and succeed if a parser succeeds;\n   it will stop and fail if a parser fails consuming input; or it\n   will try the next one if a parser fails without consuming input.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([p q]), :arglists ([p q] [p q & more]), :arglists-meta (nil nil)}}, :name blancas.kern.core/<|>, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([p q]), :arglists ([p q] [p q & more]), :arglists-meta (nil nil)}, :method-params ([p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 351, :end-line 351, :max-fixed-arity 2, :fn-var true, :arglists ([p q] [p q & more]), :doc "Tries p; if it fails without consuming any input, it tries q.\n   With more parsers, it will stop and succeed if a parser succeeds;\n   it will stop and fail if a parser fails consuming input; or it\n   will try the next one if a parser fails without consuming input."}, rmvz {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 837, :column 8, :end-line 837, :end-column 12, :private true, :arglists (quote ([cs])), :doc "Removes leading zeroes from a string."}, :private true, :name blancas.kern.core/rmvz, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 12, :method-params ([cs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 837, :end-line 837, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cs])), :doc "Removes leading zeroes from a string."}, expecting {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 279, :column 7, :end-line 279, :end-column 16, :arglists (quote ([msg s])), :doc "Sets s as expecting msg."}, :name blancas.kern.core/expecting, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 16, :method-params ([msg s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 279, :end-line 279, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg s])), :doc "Sets s as expecting msg."}, map->PState {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 131, :column 12, :end-line 131, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__29935]))}, :name blancas.kern.core/map->PState, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :method-params ([G__29935]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 131, :end-line 131, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__29935]))}, get-position {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 917, :column 7, :end-line 917, :end-column 19, :arglists (quote ([s])), :doc "Gets the position in the input stream of a parser state."}, :name blancas.kern.core/get-position, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 19, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 917, :end-line 917, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s])), :doc "Gets the position in the input stream of a parser state."}, hex-num {:name blancas.kern.core/hex-num, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 862, :column 1, :end-line 862, :end-column 13, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 862, :column 6, :end-line 862, :end-column 13}, :doc "Parses a hex integer delimited by any character that\n   is not a hex digit.", :tag any}, oct-num {:name blancas.kern.core/oct-num, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 853, :column 1, :end-line 853, :end-column 13, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 853, :column 6, :end-line 853, :end-column 13}, :doc "Parses an octal integer delimited by any character that\n   is not an octal digit.", :tag any}, skip-many1 {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 516, :column 7, :end-line 516, :end-column 17, :arglists (quote ([p])), :doc "Parses p one or more times and skips the results."}, :name blancas.kern.core/skip-many1, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 17, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 516, :end-line 516, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Parses p one or more times and skips the results."}, option {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 481, :column 7, :end-line 481, :end-column 13, :arglists (quote ([x p])), :doc "Applies p; if it fails without consuming input, it returns a\n   parser state record with the :value x as default."}, :name blancas.kern.core/option, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :method-params ([x p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 481, :end-line 481, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x p])), :doc "Applies p; if it fails without consuming input, it returns a\n   parser state record with the :value x as default."}, set-ex {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 239, :column 18, :end-line 239, :end-column 24, :dynamic true, :private true, :arglists (quote ([msg s])), :doc "Replace expect errors with expecting msg."}, :private true, :name blancas.kern.core/set-ex, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 24, :method-params ([msg s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :dynamic true, :line 239, :end-line 239, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg s])), :doc "Replace expect errors with expecting msg."}, ->PPosition {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 105, :column 12, :end-line 105, :end-column 21, :internal-ctor true, :factory :positional, :arglists (quote ([src line col]))}, :name blancas.kern.core/->PPosition, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 21, :method-params ([src line col]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 105, :end-line 105, :max-fixed-arity 3, :fn-var true, :arglists (quote ([src line col]))}, split-on {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 814, :column 7, :end-line 814, :end-column 15, :arglists (quote ([cs])), :doc "Splits a string on one of the given characters and whitespace.\n   Removes empty strings from the result."}, :name blancas.kern.core/split-on, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 15, :method-params ([cs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 814, :end-line 814, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cs])), :doc "Splits a string on one of the given characters and whitespace.\n   Removes empty strings from the result."}, PMessage {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name blancas.kern.core/PMessage, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 20, :type true, :column 12, :internal-ctor true, :line 116, :record true, :end-line 116, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, <+> {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 610, :column 7, :end-line 610, :end-column 10, :arglists (quote ([p & more])), :doc "Applies one or more parsers stopping at the first failure.\n   Flattens the result and converts it to a string.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(p more)], :arglists ([p & more]), :arglists-meta (nil)}}, :name blancas.kern.core/<+>, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(p more)], :arglists ([p & more]), :arglists-meta (nil)}, :method-params [(p more)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 610, :end-line 610, :max-fixed-arity 1, :fn-var true, :arglists ([p & more]), :doc "Applies one or more parsers stopping at the first failure.\n   Flattens the result and converts it to a string."}, sep-by1 {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 521, :column 7, :end-line 521, :end-column 14, :arglists (quote ([sep p])), :doc "Parses p one or more times while parsing sep in between;\n   collects the results of p in a vector."}, :name blancas.kern.core/sep-by1, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 14, :method-params ([sep p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 521, :end-line 521, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sep p])), :doc "Parses p one or more times while parsing sep in between;\n   collects the results of p in a vector."}, fail {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 302, :column 7, :end-line 302, :end-column 11, :arglists (quote ([msg])), :doc "Fails without consuming any input, having a single error\n   record with the passed messge msg."}, :name blancas.kern.core/fail, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 11, :method-params ([msg]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 302, :end-line 302, :max-fixed-arity 1, :fn-var true, :arglists (quote ([msg])), :doc "Fails without consuming any input, having a single error\n   record with the passed messge msg."}, split {:name blancas.kern.core/split, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 822, :column 1, :end-line 822, :end-column 11, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 822, :column 6, :end-line 822, :end-column 11}, :doc "Splits a string on whitespace.", :tag any}, PError {:num-fields 2, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name blancas.kern.core/PError, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :type true, :column 12, :internal-ctor true, :line 121, :record true, :end-line 121, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, any-char {:name blancas.kern.core/any-char, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 633, :column 1, :end-line 633, :end-column 14, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 633, :column 6, :end-line 633, :end-column 14}, :doc "Succeeds with any character.", :tag any}, err-expect {:name blancas.kern.core/err-expect, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 98, :column 1, :end-line 98, :end-column 16, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 98, :column 6, :end-line 98, :end-column 16}, :tag number}, ->PState {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 131, :column 12, :end-line 131, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([input pos value ok empty user error]))}, :name blancas.kern.core/->PState, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :method-params ([input pos value ok empty user error]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 131, :end-line 131, :max-fixed-arity 7, :fn-var true, :arglists (quote ([input pos value ok empty user error]))}, token* {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 728, :column 7, :end-line 728, :end-column 13, :arglists (quote ([xs] [xs & more])), :doc "Parses a specific string, not necessarily delimited. If more\n   than one are given it will try each choice in turn.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([xs]), :arglists ([xs] [xs & more]), :arglists-meta (nil nil)}}, :name blancas.kern.core/token*, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([xs]), :arglists ([xs] [xs & more]), :arglists-meta (nil nil)}, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 728, :end-line 728, :max-fixed-arity 1, :fn-var true, :arglists ([xs] [xs & more]), :doc "Parses a specific string, not necessarily delimited. If more\n   than one are given it will try each choice in turn."}, ->PError {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 121, :column 12, :end-line 121, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([pos msgs]))}, :name blancas.kern.core/->PError, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :method-params ([pos msgs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 121, :end-line 121, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos msgs]))}, err-message {:name blancas.kern.core/err-message, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 99, :column 1, :end-line 99, :end-column 17, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 99, :column 6, :end-line 99, :end-column 17}, :tag number}, make-err-expect {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 163, :column 7, :end-line 163, :end-column 22, :arglists (quote ([pos text])), :doc "Makes a message of type err-expect."}, :name blancas.kern.core/make-err-expect, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 22, :method-params ([pos text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pos text])), :doc "Makes a message of type err-expect."}, parse {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 932, :column 7, :end-line 932, :end-column 12, :arglists (quote ([p cs] [p cs src] [p cs src us])), :doc "Parses a character sequence; takes an optional label and a user\n   state initial value, which default to nil. Returns a PState record.\n\n   cs    A seqable object; parse calls (seq) on this value.\n   src   Identifies the source of the text, e.g. a filename.\n   us    Initializes a field that is maintained by client code.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}}, :name blancas.kern.core/parse, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}, :method-params ([p cs] [p cs src] [p cs src us]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 932, :end-line 932, :max-fixed-arity 4, :fn-var true, :arglists ([p cs] [p cs src] [p cs src us]), :doc "Parses a character sequence; takes an optional label and a user\n   state initial value, which default to nil. Returns a PState record.\n\n   cs    A seqable object; parse calls (seq) on this value.\n   src   Identifies the source of the text, e.g. a filename.\n   us    Initializes a field that is maintained by client code."}, optional {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 473, :column 7, :end-line 473, :end-column 15, :arglists (quote ([p])), :doc "Succeeds if p succeeds or if p fails without consuming input."}, :name blancas.kern.core/optional, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 15, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 473, :end-line 473, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Succeeds if p succeeds or if p fails without consuming input."}, none-of* {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 788, :column 7, :end-line 788, :end-column 15, :arglists (quote ([cs])), :doc "Succeeds if the next character is not in the supplied string."}, :name blancas.kern.core/none-of*, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 15, :method-params ([cs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 788, :end-line 788, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cs])), :doc "Succeeds if the next character is not in the supplied string."}, lower {:name blancas.kern.core/lower, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 644, :column 1, :end-line 644, :end-column 11, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 644, :column 6, :end-line 644, :end-column 11}, :doc "Parses a lower-case letter.", :tag any}, alpha-num {:name blancas.kern.core/alpha-num, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 694, :column 1, :end-line 694, :end-column 15, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 694, :column 6, :end-line 694, :end-column 15}, :doc "Parses a letter or digit.", :tag any}, run* {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 979, :column 7, :end-line 979, :end-column 11, :arglists (quote ([p cs] [p cs src] [p cs src us])), :doc "For testing parsers, e.g. at the REPL. Works like (run) but\n   on success it pretty-prints the resulting parser state.", :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}}, :name blancas.kern.core/run*, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([p cs] [p cs src] [p cs src us]), :arglists ([p cs] [p cs src] [p cs src us]), :arglists-meta (nil nil nil)}, :method-params ([p cs] [p cs src] [p cs src us]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 979, :end-line 979, :max-fixed-arity 4, :fn-var true, :arglists ([p cs] [p cs src] [p cs src us]), :doc "For testing parsers, e.g. at the REPL. Works like (run) but\n   on success it pretty-prints the resulting parser state."}, float-num {:name blancas.kern.core/float-num, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :line 871, :column 1, :end-line 871, :end-column 15, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 871, :column 6, :end-line 871, :end-column 15}, :doc "Parses a simple fractional number without an exponent.\n   It is delimited by any character that is not a decimal\n   digit. It cannot start with a period; the first period\n   found must be followed by at least one digit.", :tag any}, set-ex-x {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 1021, :column 8, :end-line 1021, :end-column 16, :private true, :arglists (quote ([_ x]))}, :private true, :name blancas.kern.core/set-ex-x, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 16, :method-params ([_ x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1021, :end-line 1021, :max-fixed-arity 2, :fn-var true, :arglists (quote ([_ x]))}, many-till {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 601, :column 7, :end-line 601, :end-column 16, :arglists (quote ([p end])), :doc "Parses zero or more p while trying end, until end succeeds.\n   Returns the results in a vector."}, :name blancas.kern.core/many-till, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 16, :method-params ([p end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 601, :end-line 601, :max-fixed-arity 2, :fn-var true, :arglists (quote ([p end])), :doc "Parses zero or more p while trying end, until end succeeds.\n   Returns the results in a vector."}, PState {:num-fields 7, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name blancas.kern.core/PState, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 18, :type true, :column 12, :internal-ctor true, :line 131, :record true, :end-line 131, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, sep-end-by {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 556, :column 7, :end-line 556, :end-column 17, :arglists (quote ([sep p])), :doc "Parses p zero or more times separated, and optionally ended by sep;\n   collects the results in a vector."}, :name blancas.kern.core/sep-end-by, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 17, :method-params ([sep p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 556, :end-line 556, :max-fixed-arity 2, :fn-var true, :arglists (quote ([sep p])), :doc "Parses p zero or more times separated, and optionally ended by sep;\n   collects the results in a vector."}, predict {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 584, :column 7, :end-line 584, :end-column 14, :arglists (quote ([p])), :doc "Applies p; if it succeeds it consumes no input."}, :name blancas.kern.core/predict, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 14, :method-params ([p]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 584, :end-line 584, :max-fixed-arity 1, :fn-var true, :arglists (quote ([p])), :doc "Applies p; if it succeeds it consumes no input."}, unexpected {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 265, :column 7, :end-line 265, :end-column 17, :arglists (quote ([msg s])), :doc "Sets s as failed because an unexpected reason."}, :name blancas.kern.core/unexpected, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 17, :method-params ([msg s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 265, :end-line 265, :max-fixed-arity 2, :fn-var true, :arglists (quote ([msg s])), :doc "Sets s as failed because an unexpected reason."}, satisfy {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 311, :column 7, :end-line 311, :end-column 14, :arglists (quote ([pred])), :doc "Succeeds if the next character satisfies the predicate pred,\n   in which case advances the position of the input stream. It\n   may fail on an unexpected end of input."}, :name blancas.kern.core/satisfy, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 14, :method-params ([pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 311, :end-line 311, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pred])), :doc "Succeeds if the next character satisfies the predicate pred,\n   in which case advances the position of the input stream. It\n   may fail on an unexpected end of input."}, set-input {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 912, :column 7, :end-line 912, :end-column 16, :arglists (quote ([in])), :doc "Sets the input stream in a parser state."}, :name blancas.kern.core/set-input, :variadic false, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 16, :method-params ([in]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 912, :end-line 912, :max-fixed-arity 1, :fn-var true, :arglists (quote ([in])), :doc "Sets the input stream in a parser state."}, << {:protocol-inline nil, :meta {:file "/home/jenkins/workspace/orcl_master-BWHZEOIMVRLLYGQYEFB6RSZ6C6P6745JA24OSQTEWBYF6Z3JNJXQ/demo/resources/public/js/compiled/min/blancas/kern/core.cljc", :line 413, :column 7, :end-line 413, :end-column 9, :arglists (quote ([p q] [p q & more])), :doc "Parses p followed by q; keeps p, skips q. If more parsers are\n   given, it keeps the first result and skips the rest.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([p q]), :arglists ([p q] [p q & more]), :arglists-meta (nil nil)}}, :name blancas.kern.core/<<, :variadic true, :file "resources/public/js/compiled/min/blancas/kern/core.cljc", :end-column 9, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([p q]), :arglists ([p q] [p q & more]), :arglists-meta (nil nil)}, :method-params ([p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 413, :end-line 413, :max-fixed-arity 2, :fn-var true, :arglists ([p q] [p q & more]), :doc "Parses p followed by q; keeps p, skips q. If more parsers are\n   given, it keeps the first result and skips the rest."}}, :cljs.spec/registry-ref [], :require-macros {cljs.pprint cljs.pprint, clojure.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{input :oct-digit :upper :space user :whitespace text :letter :else :dec-lit :comma :value :or cljs.core/defn :pos :type :float-lit :src :empty :expecting value :hex-lit :msgs :dynamic :line pos type :col src :ok :lower :alpha-num empty :new-line :error :unexpected :input msgs line col :end-of :eof :hex-digit ok :tab :user :err-pos :digit :oct-lit error :text}, :order [cljs.core/defn :dynamic :src :line :col src line col :type :text type text :pos :msgs pos msgs :input :value :ok :empty :user :error input value ok empty user error :else :unexpected :comma :or :expecting :eof :letter :lower :upper :whitespace :space :tab :digit :hex-digit :oct-digit :alpha-num :end-of :new-line :dec-lit :oct-lit :hex-lit :float-lit :err-pos]}, :doc "The core Kern library.\n\nKern is a library of parser combinators for Clojure. It is useful for\nimplementing recursive-descent parsers based on predictive LL(1) grammars\nwith on-demand, unlimited look-ahead LL(*).\n\nThe main inspiration for Kern comes from Parsec, a Haskell library written\nby Daan Leijen, as well as work by Graham Hutton, Erik Meijer, and William Burge.\nThe name Kern is a token of appreciation to Brian Kernighan (now at Princeton)\nfor his work on programming languages.\n\nDaan Leijen\nParsec, a fast combinator parser, 2001\nhttp://legacy.cs.uu.nl/daan/download/parsec/parsec.pdf\n\nGraham Hutton and Erik Meijer\nMonadic Parser Combinators, 1996\nhttp://eprints.nottingham.ac.uk/237/1/monparsing.pdf\n\nWilliam H. Burge\nRecursive Programming Techniques\nAddison-Wesley, 1975"}